# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.4
        environment:
          - POSTGRES_DB: hc-test
          - POSTGRES_USER: root
          - POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo apt-get update -qq && sudo apt-get install postgresql

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > "cc-test-reporter"
            chmod +x "cc-test-reporter"
            pip install -r requirements.txt
            pip install codacy-coverage

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Set up DB
          command: |
            sudo service postgresql start
            createdb -h localhost -U root hc
            . venv/bin/activate
            python manage.py migrate
          environment:
            DATABASE_URL: 'postgres://root@localhost:5432/hc-test'

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            ./cc-test-reporter before-build
            coverage run --omit=*/tests/* --source='./hc' manage.py test
            coverage xml
            python-codacy-coverage -r coverage.xml
            ./cc-test-reporter after-build --exit-code $?

      - store_artifacts:
          path: test-reports
          destination: test-reports
